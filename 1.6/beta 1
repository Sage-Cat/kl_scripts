// Функція HEX_TO_BIN перетворює шістнадцятковий рядок в бінарний
function HEX_TO_BIN(hex) {
    const hexDigits = "0123456789ABCDEF"; // Спісок символів для шістнадцяткового числа
    let binary = ""; // Рядок для зберігання бінарного представлення

    // Проходимо по кожному символу у вхідному рядку
    for (let i = 0; i < hex.length; i++) {
        const hexChar = hex.charAt(i); // Поточний символ
        const index = hexDigits.indexOf(hexChar.toUpperCase()); // Знаходимо індекс символу в нашому списку

        // Якщо символ знайдено, додаємо його бінарне представлення до рядка binary
        if (index !== -1) {
            binary += index.toString(2).padStart(4, "0"); // Переводимо індекс у бінарний формат
        }
    }

    return binary; // Повертаємо бінарний рядок
}

// Функція FINDERRORCODES знаходить помилкові коди в послідовності
function FINDERRORCODES(input) {
    const errorCodes = []; // Масив для зберігання помилкових кодів

    // Проходимо по послідовності
    for (let i = 0; i < input.length - 1; i++) {
        const binary1 = HEX_TO_BIN(input.charAt(i)); // Бінарне представлення першого символу
        const binary2 = HEX_TO_BIN(input.charAt(i + 1)); // Бінарне представлення другого символу

        let errorCodesStr = ""; // Рядок для зберігання помилкових кодів
        for (let j = 0; j < binary1.length; j++) {
            // Порівнюємо біти двох символів і додаємо "1" якщо вони відрізняються, або "0" якщо ні
            if (binary1.charAt(j) !== binary2.charAt(j)) {
                errorCodesStr += "1";
            } else {
                errorCodesStr += "0";
            }
        }

        // Додаємо пару символів та їх помилковий код у масив
        errorCodes.push([input.charAt(i) + "->" + input.charAt(i + 1), errorCodesStr]);
    }

    return errorCodes; // Повертаємо масив помилкових кодів
}

// Функція INSERTERRORCODES вставляє помилкові коди в таблицю
function INSERTERRORCODES() {
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet(); // Отримуємо активний аркуш

    const inputRange = sheet.getRange("A1").getValue(); // Отримуємо вхідні дані з клітинки A1

    // Перевіряємо, чи вхідні дані існують
    if (!inputRange) {
        Logger.log("Вхідні дані порожні або не визначені.");
        return;
    }

    const errorCodes = FINDERRORCODES(inputRange); // Знаходимо помилкові коди

    // Отримуємо діапазон для виводу помилкових кодів у таблицю, починаючи з рядка 2 і стовпця 1
    const outputRange = sheet.getRange(2, 1, errorCodes.length, 2);

    // Встановлюємо значення помилкових кодів у відповідний діапазон
    outputRange.setValues(errorCodes);
}
